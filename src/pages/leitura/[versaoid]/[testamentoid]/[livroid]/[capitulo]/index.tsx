import { GetStaticProps, GetStaticPaths } from 'next';
import { FetchAPICapitulosServerSide, FetchConteudoServerSide } from "@/services/fetch"
import { IBuscaConteudoLeitura } from "@/entities/interfaces"
import Head from 'next/head'
import NavBar from "../../../../../../components/navbar"
import ReadingPanel from '@/components/readingPanel';
import Footer from "../../../../../../components/footer"
import Loading from '@/components/loading';



const versao = 1 // somente a Almeida revisada e atualizada
const todostestamentos = 2 //os dois testamentos
const antigoTestamento = 1
const novoTestamento = 2
const todosLivros = 66  //todos os livros Antigo e novo testamentos
const livrosAntigoTestamento = 39
const livroNovotestamento = 66
const capituloAmountTest = 150 //somente os 5 capitulos de cada livro

interface IGetStaticProps {
    versaoid: string,
    testamentoid: string,
    livroid: string,
    capitulo: string
}


export default function LeituraBiblia({ data }: IBuscaConteudoLeitura) {

    if (!data) {
        return (
            <>
                <NavBar />
                <Loading />
            </>
        )
    }
    return (
        <>
            <div >
                <Head>
                    <title>Create Next App</title>
                    <meta name="description" content="Generated by create next app" />
                    <meta name="viewport" content="width=device-width, initial-scale=1" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>
                <NavBar />
            </div>
            {/* <Footer /> */}

            <ReadingPanel data={data} />
        </>
    )
}
export const getStaticPaths: GetStaticPaths = async () => {
    let paths = []
    for (let testamento = 1; testamento <= antigoTestamento; testamento++) {
        for (var livros = 1; livros <= livrosAntigoTestamento; livros++) {
            let fetchCapitulos = await FetchAPICapitulosServerSide(versao, livros)//obtem a quantida de exata de capitulos do livro da vez
            for (var capitulos = 1; capitulos <= fetchCapitulos[0].capitulo; capitulos++) {
                paths.push({
                    params: {
                        versaoid: `${versao}`,
                        testamentoid: `${testamento}`,
                        livroid: `${livros}`,
                        capitulo: `${capitulos}`
                    }
                })
            }
        }
    }
    return { paths, fallback: true }
}

export const getStaticProps: GetStaticProps = async ({ params }: any) => {
    const { versaoid, testamentoid, livroid, capitulo } = params as IGetStaticProps
    let response = await FetchConteudoServerSide(versaoid, testamentoid, livroid, capitulo) as IBuscaConteudoLeitura
    return {
        props: {
            data: response
        }
    }
}

