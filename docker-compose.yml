version: '3'

services:
  mysqlsrv:
    container_name: ${DATABASE_PROD_ENV}
    image: mysql
    command: --default-authentication-plugin=mysql_native_password

    volumes:
      #- /volumes_containers/proj_biblia/vol_mysql:/var/lib/mysql/

      - ${VOLUME-DATABASE="- /volumes_containers/proj_biblia/vol_mysql/biblias13v.sql.sql:/docker-entrypoint-initdb.d/hinoHarpa.sql"}
      #arquivos com extensões .sh, .sqle .sql.gzque são que encontrados em /docker-entrypoint-initdb.d dentro do container são executados
      # automaticamente pelo proprio mysql em ordem alfabética..

      - ${VOLUME-SCRIPT}

    environment:
      MYSQL_ROOT_PASSWORD: ${ROOT_PASSWORD}
      MYSQL_DATABASE: "biblias13v.sql"
    ports:
      - ${PORTS_MYSQL}
    restart: unless-stopped

    networks:
      - network-mysql-nodejs

  node:
    image: "node:8"
    working_dir: ${WORK_DIR}
    environment:
      - NODE_env=production
    ports:
      - ${PORTS_NODE}
    restart: unless-stopped
    depends_on:
      - mysqlsrv
    networks:
      - network-mysql-nodejs
    volumes:
      - ${VOLUME_APP}
      - ${VOLUME_LOGS}
    command: ${NODE_PROD_START}

  nginxreact:
    image: nginx
    volumes:
      - ${VOLUME_SITE}
      - ${VOLUME_NGINX_CONF}
      - ${VOLUME_HTML}
      - ${VOLUME_DEFAULT_CONF}
    ports:
      - ${PORTS_NGINX}
    depends_on:
      - node
    networks:
      - network-mysql-nodejs

networks:
  network-mysql-nodejs:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK}
          # gateway: 172.29.0.1

          #-----------------------------------------------------------------------------------------------------------------------
          #!/bin/sh

          # Esse é o script --script_mysql.sh-- executado na linha 19

          # mysql -u root -pdeusepoder --execute="CREATE USER 'docker_biblia'@'localhost' IDENTIFIED BY 'M@deld4166'; GRANT ALL PRIVILEGES ON * . * TO 'docker_biblia'@'localhost'; UPDATE mysql.user SET host='%' WHERE user='docker_biblia'; FLUSH PRIVILEGES;"

          # CREATE USER 'docker_biblia'@'localhost' IDENTIFIED BY 'M@deld4166';
          # linha acima: cria usuario com a senha M@...

          # GRANT ALL PRIVILEGES ON * . * TO 'docker_biblia'@'localhost';
          # linha acima: add privilégios em todas as tabelas

          # UPDATE mysql.user SET host="%" WHERE user="docker_biblia";
          # linha acima: conf o servidor para permitir acesso pelo user de qualquer origem

          # FLUSH PRIVILEGES;
          # linha acima:  reload dos privégios

          #-----------------------------------------------------------------------------------------------------------------------
